#!/bin/bash

VOLUME_HOME="/var/lib/mysql"

# decide if we're going to show credentials after creation
SHOW_CREDENTIALS=0
_REQUIRED="MYSQL_USER MYSQL_PASS ELGG_DB_HOST ELGG_DB_USER ELGG_DB_PASS ELGG_DB_NAME

# set defaults or env vars for Elgg and MySQL
# MySQL
MYSQL_USER=${MYSQL_USER:-"admin"}
MYSQL_PASS=${MYSQL_PASS:-$(pwgen -s 12 1)}

# required for installation
ELGG_DB_HOST=${ELGG_DB_HOST:-"localhost"}
ELGG_DB_USER=$MYSQL_USER
ELGG_DB_PASS=$MYSQL_PASS
ELGG_DB_NAME=${ELGG_DB_NAME:-"elgg"}

ELGG_SITE_NAME=${ELGG_SITE_NAME:-"Elgg Site"}
ELGG_WWW_ROOT=${ELGG_WWW_ROOT:-"/var/www/html/"}
ELGG_DATA_ROOT=${ELGG_DATA_ROOT:-"/media/"}

# admin user setup
ELGG_DISPLAY_NAME=${ELGG_DISPLAY_NAME:-"admin"}
ELGG_EMAIL=${ELGG_EMAIL:-"elgg_docker@${HOSTNAME}"}
ELGG_USERNAME=${ELGG_USERNAME:-"admin"}
ELGG_PASSWORD=${ELGG_PASSWORD:-$(pwgen -s 12 1)}

# optional for installation
ELGG_DB_PREFIX=${ELGG_DB_PREFIX:-"elgg_"}
ELGG_PATH=${ELGG_PATH:-"/var/www/html/"}
# 2 is ACCESS_PUBLIC
ELGG_SITE_ACCESS=2

# rewrite 
sed -ri -e "s/^upload_max_filesize.*/upload_max_filesize = ${PHP_UPLOAD_MAX_FILESIZE}/" \
    -e "s/^post_max_size.*/post_max_size = ${PHP_POST_MAX_SIZE}/" /etc/php5/apache2/php.ini
    
# test MySQL and install if needed
if [[ ! -f $VOLUME_HOME/ibdata1 ]] && [[ ! -d $VOLUME_HOME/mysql ]]; then
    echo "=> An empty or uninitialized MySQL volume is detected in $VOLUME_HOME"
    ls $VOLUME_HOME
    echo "=> Installing MySQL ..."
    mysql_install_db > /dev/null 2>&1
    echo "=> Done!"  
    /create_mysql_admin_user.sh
else
    echo "=> Using an existing volume of MySQL"
fi

# test connection to Elgg and install if needed.

php /install.php

exec supervisord -n